package com.ot.VendorTool.entity;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;

import io.swagger.annotations.ApiModelProperty;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
public class Product {
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@ApiModelProperty(value = "AutoGenerated")
	private long id;

	@NotBlank(message = "Please Enter The Product-Name")
	@ApiModelProperty(required = true)
	private String name;

	@NotBlank(message = "Please Enter The Product-Description")
	@ApiModelProperty(required = true)
	private String description;

	@NotNull(message = "Please Enter The Price-Of-Product")
	@ApiModelProperty(required = true)
	private double price;
	
	@NotNull(message = "Please Enter The Price-Of-Product")
	@ApiModelProperty(required = true)
	@JsonIgnore
	private double handlingCharges;
	
	@NotNull(message = "Please Enter The Price-Of-Product")
	@ApiModelProperty(required = true)
	@JsonIgnore
	private double totalSalesPrice;

	@NotNull(message = "Please Enter The Product-Quantity")
	@ApiModelProperty(required = true)
	private double quantity;

	
	@Getter(value = AccessLevel.NONE)
	@Setter(value = AccessLevel.NONE)
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "product")
    private List<ProductImage> images;

	@JsonIgnore
	public List<ProductImage> getImages() {
		return images;
	}

	@JsonIgnore
	public void setImages(List<ProductImage> images) {
		this.images = images;
	}

	@ManyToOne
	@JoinColumn
	@JsonBackReference("vendor")
	private Vendor vendor;
	
	@ManyToOne
	@JoinColumn
	@JsonBackReference("stock")
	private Stock stock;

}